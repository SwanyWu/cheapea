{"ast":null,"code":"var _jsxFileName = \"/Users/huiyaowu/cheapea/cheapea/kortings-app/src/components/product/ProductBookmark.js\",\n  _s = $RefreshSig$();\nimport localForage from 'localforage';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductBookmark(props) {\n  _s();\n  const productId = props.id;\n  const [isBookmarked, setIsBookmarked] = useState(false);\n  useEffect(() => {\n    updateBookMarkButtonState(productId);\n  });\n  const triggerButtonAnimation = () => {\n    const element = document.querySelector('.personal-list-button');\n    if (element !== null) {\n      element.classList.remove('jumpy'); // reset animation\n      void element.offsetWidth; // trigger reflow\n      element.classList.add('jumpy'); // start animation\n    }\n  };\n\n  const triggerButtonUpdate = () => {\n    localForage.getItem('teerkost-bookmarks').then(function (value) {\n      var amount = 0;\n      if (value !== null) {\n        amount = value.length;\n      }\n      const element = document.querySelector('.personal-list-button-tag');\n      if (element !== null) {\n        element.textContent = amount;\n      }\n    });\n  };\n  const registerBookmark = id => {\n    localForage.getItem('teerkost-bookmarks').then(function (value) {\n      if (value !== null) {\n        // if something is present in browserstorage\n        const valueFound = value.find(element => element === id);\n        if (valueFound === id) {\n          var allBookmarks = value;\n          allBookmarks = allBookmarks.filter(element => element !== id); // remove from existing array\n          console.log(id + \" wordt verwijdert aan de bookmarks.\");\n          localForage.setItem('teerkost-bookmarks', allBookmarks).then(function (value) {\n            triggerButtonAnimation();\n            triggerButtonUpdate();\n            updateBookMarkButtonState(id);\n          }).catch(function (err) {\n            console.log(\"Iets misgegaan bij het opslaan van bookmarks: \" + err);\n          });\n        } else {\n          var allBookmarks = value;\n          allBookmarks.push(id); // push to the existing array\n          console.log(id + \" wordt toegevoegt aan de bookmarks.\");\n          localForage.setItem('teerkost-bookmarks', allBookmarks).then(function (value) {\n            triggerButtonAnimation();\n            triggerButtonUpdate();\n            updateBookMarkButtonState(id);\n          }).catch(function (err) {\n            console.log(\"Iets misgegaan bij het opslaan van bookmarks: \" + err);\n          });\n        }\n      } else {\n        var allBookmarks = [id]; // nothing found, make a new array with first id\n        console.log(\"niks gevonden. Tijd om te starten\");\n        localForage.setItem('teerkost-bookmarks', allBookmarks).then(function (value) {\n          console.log(\"Voor het eerst, de array \" + value + \" toegevoegd\");\n          triggerButtonAnimation();\n          triggerButtonUpdate();\n          updateBookMarkButtonState(id);\n        }).catch(function (err) {\n          console.log(\"Iets misgegaan bij het opslaan van eerste bookmark: \" + err);\n        });\n      }\n    }).catch(function (err) {\n      console.log(\"Iets misgegaan bij het ophalen van data: \" + err);\n    });\n  };\n  const updateBookMarkButtonState = productId => {\n    localForage.getItem('teerkost-bookmarks').then(function (value) {\n      if (value !== null) {\n        // if something is present in browserstorage\n        const valueFound = value.find(element => element === productId);\n        if (valueFound === productId) {\n          setIsBookmarked(true);\n        } else {\n          setIsBookmarked(false);\n        }\n      } else {\n        setIsBookmarked(false);\n      }\n    });\n  };\n  const showBookMarkIcon = () => {\n    if (isBookmarked === true) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => registerBookmark(productId),\n        className: \"product-bookmark product-bookmark-true\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ri-bookmark-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 122\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => registerBookmark(productId),\n        className: \"product-bookmark\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ri-bookmark-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 100\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n    }\n  };\n  return showBookMarkIcon();\n}\n_s(ProductBookmark, \"HVjfSBH6ahpS7Dxg0PeB8Q0IWXk=\");\n_c = ProductBookmark;\nexport default ProductBookmark;\nvar _c;\n$RefreshReg$(_c, \"ProductBookmark\");","map":{"version":3,"names":["localForage","React","useEffect","useState","ProductBookmark","props","productId","id","isBookmarked","setIsBookmarked","updateBookMarkButtonState","triggerButtonAnimation","element","document","querySelector","classList","remove","offsetWidth","add","triggerButtonUpdate","getItem","then","value","amount","length","textContent","registerBookmark","valueFound","find","allBookmarks","filter","console","log","setItem","catch","err","push","showBookMarkIcon"],"sources":["/Users/huiyaowu/cheapea/cheapea/kortings-app/src/components/product/ProductBookmark.js"],"sourcesContent":["import localForage from 'localforage'\nimport React, {useEffect, useState} from 'react'\n\nfunction ProductBookmark(props) {\n\n    const productId = props.id;\n\n    const [isBookmarked, setIsBookmarked] = useState(false)\n\n    useEffect(() => {\n        updateBookMarkButtonState(productId)\n    })\n\n    const triggerButtonAnimation = () => {\n\n        const element = document.querySelector('.personal-list-button')\n        if(element !== null) {\n            element.classList.remove('jumpy'); // reset animation\n            void element.offsetWidth; // trigger reflow\n            element.classList.add('jumpy'); // start animation\n        }\n    }\n\n    const triggerButtonUpdate = () => {\n        localForage.getItem('teerkost-bookmarks').then(function (value) {\n            var amount = 0\n            if(value !== null) {\n                amount = value.length\n            }\n            const element = document.querySelector('.personal-list-button-tag')\n            if(element !== null) {\n                element.textContent = amount    \n            }\n        }) \n    }\n\n    const registerBookmark = (id) => {\n        localForage.getItem('teerkost-bookmarks').then(function (value) {\n            if(value !== null) { // if something is present in browserstorage\n                const valueFound = value.find(element => element === id)\n\n                if(valueFound === id) {\n                    var allBookmarks = value;\n                    allBookmarks = allBookmarks.filter(element => element !== id) // remove from existing array\n                    console.log(id + \" wordt verwijdert aan de bookmarks.\")\n\n                    localForage.setItem('teerkost-bookmarks', allBookmarks).then(function(value) {\n                        triggerButtonAnimation()\n                        triggerButtonUpdate()\n                        updateBookMarkButtonState(id)\n                    }).catch(function (err) {\n                        console.log(\"Iets misgegaan bij het opslaan van bookmarks: \" + err)\n                    })\n                } else {\n                    var allBookmarks = value;\n                    allBookmarks.push(id) // push to the existing array\n                    console.log(id + \" wordt toegevoegt aan de bookmarks.\")\n                    localForage.setItem('teerkost-bookmarks', allBookmarks).then(function(value) {\n                        triggerButtonAnimation()\n                        triggerButtonUpdate()\n                        updateBookMarkButtonState(id)\n                    }).catch(function (err) {\n                        console.log(\"Iets misgegaan bij het opslaan van bookmarks: \" + err)\n                    })\n                }\n            } else {\n                var allBookmarks = [id] // nothing found, make a new array with first id\n                console.log(\"niks gevonden. Tijd om te starten\")\n                localForage.setItem('teerkost-bookmarks', allBookmarks).then(function(value) {\n                    console.log(\"Voor het eerst, de array \" + value + \" toegevoegd\")\n                    triggerButtonAnimation()\n                    triggerButtonUpdate()\n                    updateBookMarkButtonState(id)\n                }).catch(function (err) {\n                    console.log(\"Iets misgegaan bij het opslaan van eerste bookmark: \" + err)\n                })\n            }\n        }).catch(function(err) {\n            console.log(\"Iets misgegaan bij het ophalen van data: \" + err)\n        })\n    }\n\n    const updateBookMarkButtonState = (productId) => {\n        localForage.getItem('teerkost-bookmarks').then(function (value) {\n            if(value !== null) { // if something is present in browserstorage\n                const valueFound = value.find(element => element === productId)\n                if(valueFound === productId) {\n                    setIsBookmarked(true)\n                } else {\n                    setIsBookmarked(false)\n                }\n            } else {\n                setIsBookmarked(false)\n            }\n        })\n    }\n\n    const showBookMarkIcon = () => {\n        if(isBookmarked === true) {\n            return (<span onClick={() => registerBookmark(productId)} className=\"product-bookmark product-bookmark-true\"><i className='ri-bookmark-fill'></i></span>)\n        }\n        else {\n            return (<span onClick={() => registerBookmark(productId)} className=\"product-bookmark\"><i className='ri-bookmark-line'></i></span>)\n        }\n    }\n\n    return (\n        showBookMarkIcon()\n    )\n\n}\n\nexport default ProductBookmark;"],"mappings":"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"},"metadata":{},"sourceType":"module"}